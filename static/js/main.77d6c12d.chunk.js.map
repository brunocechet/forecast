{"version":3,"sources":["hooks/useSearchHistory.js","containers/City/hooks/utils/transformObjectData.js","containers/City/hooks/useCityQuery.js","containers/City/components/CityImage/services/utils/getRandomInt.js","containers/City/components/CityImage/services/getCityImage.js","containers/City/components/CityImage/CityImage.styles.js","containers/City/components/CityImage/CityImage.jsx","containers/City/components/CityMap/CityMap.styles.js","containers/City/components/CityMap/CityMap.jsx","containers/City/components/CityNotFound/CityNotFound.jsx","containers/City/components/CityTemperature/CityTemperature.jsx","containers/City/components/LocalDateTime/LocalDateTime.jsx","containers/City/City.jsx","containers/Home/components/SearchForm/components/SearchInput/SearchInput.jsx","containers/Home/components/SearchForm/components/SearchInput/SearchInput.styles.js","containers/Home/components/SearchForm/SearchForm.jsx","containers/Home/components/SearchForm/SearchForm.styles.js","containers/Home/components/SearchHistory/SearchHistory.styles.js","containers/Home/components/SearchHistory/SearchHistory.jsx","containers/Home/Home.jsx","theme.js","App.jsx","App.styles.js","serviceWorker.js","index.jsx"],"names":["useSearchHistory","useLocalStorage","localStorageItems","setLocalStorageItems","useState","stateItems","setStateItems","useEffect","handleAddNewItem","useCallback","newItem","oldItems","newItems","filter","item","unshift","splice","handleRemoveItem","removeItem","items","add","remove","transformObjectData","coord","main","city","name","sys","weatherData","weather","dt","feelsLike","feels_like","humidity","pressure","actual","temp","max","temp_max","min","temp_min","pop","description","icon","title","location","country","temperature","parseInt","imageUrl","dateTime","Date","localTime","toLocaleTimeString","localDate","toLocaleDateString","process","REACT_APP_OWM_API_KEY","REACT_APP_OWM_API_URL","REACT_APP_OWM_API_MODE","REACT_APP_OWM_API_UNITS","REACT_APP_OWM_API_LANG","getCityByName","_","cityName","a","params","URLSearchParams","append","fetch","toString","then","response","json","cod","message","data","error","errorCode","getRandomInt","Math","floor","random","REACT_APP_FLICK_API_URL","REACT_APP_FLICKR_API_KEY","lat","lon","photo","photos","cityImageData","cityPhotos","length","server","id","secret","url","getCityImage","styles","theme","largeSize","width","spacing","height","useStyles","makeStyles","CityImage","coordinates","setImageUrl","imageTitle","setImageTitle","classes","loadCityImage","Box","alt","boxShadow","className","component","Avatar","src","defaultProps","borderRadius","mapboxgl","accessToken","CityMap","Map","container","style","center","zoom","CityNotFound","CityTemperature","Tooltip","aria-label","arrow","placement","Typography","variant","LocalDateTime","textAlign","color","City","useParams","history","useHistory","addCityToHistory","useQuery","retry","isLoading","Grid","xs","Button","onClick","push","startIcon","iconButton","padding","input","SearchInput","InputBase","fullWidth","inputProps","placeholder","type","endAdornment","IconButton","root","display","margin","SearchForm","Paper","onSubmit","event","preventDefault","target","value","elevation","buttonsContainer","marginTop","historyButton","deleteButton","position","marginLeft","SearchHistory","align","map","Fragment","key","fontSize","Home","alignItems","createMuiTheme","typography","fontFamily","join","palette","primary","secondary","background","default","paper","App","StrictMode","ThemeProvider","CssBaseline","Container","basename","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.77d6c12d.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useLocalStorage } from 'react-use';\r\n\r\nconst LOCALSTORAGE_KEY = 'forecast-history';\r\n\r\nfunction useSearchHistory() {\r\n  const [localStorageItems, setLocalStorageItems] = useLocalStorage(LOCALSTORAGE_KEY, []);\r\n  const [stateItems, setStateItems] = useState(localStorageItems);\r\n\r\n  useEffect(() => {\r\n    setLocalStorageItems(stateItems);\r\n  }, [setLocalStorageItems, stateItems]);\r\n\r\n  const handleAddNewItem = useCallback(\r\n    newItem => {\r\n      setStateItems(oldItems => {\r\n        // eslint-disable-next-line prefer-const\r\n        let newItems = oldItems.filter(item => item !== newItem);\r\n        newItems.unshift(newItem);\r\n        newItems.splice(5);\r\n\r\n        return newItems;\r\n      });\r\n    },\r\n    [setStateItems]\r\n  );\r\n\r\n  const handleRemoveItem = useCallback(\r\n    removeItem => {\r\n      setStateItems(oldItems => {\r\n        const newItems = oldItems.filter(item => item !== removeItem);\r\n\r\n        return newItems;\r\n      });\r\n    },\r\n    [setStateItems]\r\n  );\r\n\r\n  return { items: stateItems, add: handleAddNewItem, remove: handleRemoveItem };\r\n}\r\n\r\nexport default useSearchHistory;\r\n","export default function transformObjectData({ coord, main, name: city, sys, weather: weatherData, dt } = {}) {\r\n  const { feels_like: feelsLike, humidity, pressure, temp: actual, temp_max: max, temp_min: min } = main ?? {};\r\n\r\n  const { description, icon, main: title } = weatherData?.pop?.() ?? weatherData ?? {};\r\n\r\n  const location = {\r\n    city,\r\n    country: sys?.country ?? ''\r\n  };\r\n\r\n  const temperature = {\r\n    actual: `${parseInt(actual, 10)}º`,\r\n    feelsLike: `${parseInt(feelsLike, 10)}º`,\r\n    max: `${parseInt(max, 10)}º`,\r\n    min: `${parseInt(min, 10)}º`\r\n  };\r\n\r\n  const weather = {\r\n    description,\r\n    icon,\r\n    imageUrl: icon ? `http://openweathermap.org/img/wn/${icon}@2x.png` : '',\r\n    title\r\n  };\r\n\r\n  // Time of data calculation, unix, UTC\r\n  const dateTime = dt && new Date(dt * 1000);\r\n\r\n  return {\r\n    coord,\r\n    localTime: dateTime && dateTime.toLocaleTimeString(),\r\n    localDate: dateTime && dateTime.toLocaleDateString(),\r\n    humidity: `${humidity}%`,\r\n    location,\r\n    pressure: `${pressure} hPa`,\r\n    temperature,\r\n    weather\r\n  };\r\n}\r\n","import { useQuery } from 'react-query';\r\n\r\n// Utils\r\nimport transformObjectData from './utils/transformObjectData';\r\n\r\nconst {\r\n  REACT_APP_OWM_API_KEY,\r\n  REACT_APP_OWM_API_URL,\r\n  REACT_APP_OWM_API_MODE,\r\n  REACT_APP_OWM_API_UNITS,\r\n  REACT_APP_OWM_API_LANG\r\n} = process.env;\r\n\r\nconst getCityByName = async (_, cityName) => {\r\n  const params = new URLSearchParams();\r\n\r\n  params.append('appid', REACT_APP_OWM_API_KEY);\r\n  params.append('lang', REACT_APP_OWM_API_LANG);\r\n  params.append('mode', REACT_APP_OWM_API_MODE);\r\n  params.append('q', cityName);\r\n  params.append('units', REACT_APP_OWM_API_UNITS);\r\n\r\n  const { cod, message, ...data } = await fetch(`${REACT_APP_OWM_API_URL}?${params.toString()}`).then(response =>\r\n    response.json()\r\n  );\r\n\r\n  const hasError = cod && cod >= 400;\r\n\r\n  if (hasError) {\r\n    return {\r\n      error: message,\r\n      errorCode: parseInt(cod, 10)\r\n    };\r\n  }\r\n\r\n  return transformObjectData(data);\r\n};\r\n\r\nexport default function useCityQuery(cityName) {\r\n  return useQuery(['city', cityName], getCityByName, {\r\n    retry: 3\r\n  });\r\n}\r\n","export default function getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n","import getRandomInt from './utils/getRandomInt';\r\n\r\nconst { REACT_APP_FLICK_API_URL, REACT_APP_FLICKR_API_KEY } = process.env;\r\n\r\nasync function getCityImage(lat, lon) {\r\n  const params = new URLSearchParams();\r\n\r\n  params.append('api_key', REACT_APP_FLICKR_API_KEY);\r\n  params.append('content_type', 1);\r\n  params.append('format', 'json');\r\n  params.append('is_getty', true);\r\n  params.append('lat', lat);\r\n  params.append('lon', lon);\r\n  params.append('media', 'photos');\r\n  params.append('method', 'flickr.photos.search');\r\n  params.append('nojsoncallback', 1);\r\n  params.append('per_page', 5);\r\n  params.append('sort', 'interestingness-desc');\r\n\r\n  const {\r\n    photos: { photo }\r\n  } = await fetch(`${REACT_APP_FLICK_API_URL}?${params.toString()}`).then(response => response.json());\r\n\r\n  const cityPhotos = photo ?? [];\r\n\r\n  const cityImageData = cityPhotos[getRandomInt(cityPhotos.length)] ?? {};\r\n\r\n  const { server, id, secret, title } = cityImageData;\r\n\r\n  const url = `https://live.staticflickr.com/${server}/${id}_${secret}.jpg`;\r\n\r\n  return { url, title };\r\n}\r\n\r\nexport default getCityImage;\r\n","const styles = theme => ({\r\n  largeSize: {\r\n    width: theme.spacing(40),\r\n    height: theme.spacing(40)\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Avatar, Box } from '@material-ui/core';\r\n\r\nimport getCityImage from './services/getCityImage';\r\n\r\nimport styles from './CityImage.styles';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction CityImage({ coordinates }) {\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [imageTitle, setImageTitle] = useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  const loadCityImage = useCallback(\r\n    async (lat, lon) => {\r\n      const { url, title } = await getCityImage(lat, lon);\r\n\r\n      setImageUrl(url);\r\n      setImageTitle(title);\r\n    },\r\n    [setImageUrl, setImageTitle]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const { lat, lon } = coordinates;\r\n\r\n    lat && lon && loadCityImage(lat, lon);\r\n  }, [coordinates, loadCityImage]);\r\n\r\n  return imageUrl && imageTitle ? (\r\n    <Box\r\n      alt={imageTitle}\r\n      boxShadow={3}\r\n      className={classes.largeSize}\r\n      component={Avatar}\r\n      src={imageUrl}\r\n      title={imageTitle}\r\n    />\r\n  ) : null;\r\n}\r\n\r\nCityImage.defaultProps = {\r\n  coordinates: {}\r\n};\r\n\r\nCityImage.propTypes = {\r\n  coordinates: PropTypes.shape({\r\n    lat: PropTypes.number.isRequired,\r\n    lon: PropTypes.number.isRequired\r\n  })\r\n};\r\n\r\nexport default CityImage;\r\n","const styles = theme => ({\r\n  largeSize: {\r\n    width: theme.spacing(40),\r\n    height: theme.spacing(40),\r\n    borderRadius: '50%'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nimport { Box } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport styles from './CityMap.styles';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiYnJ1bm9jZWNoZXQiLCJhIjoiY2tmeXRwMHFzMThvNjJzb2tzaWFoNTFoaCJ9.5ipdSZVNwScZXW44gmmdnw';\r\n\r\nconst MAPBOX_CONTAINER_ID = 'mapbox-container';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction CityMap({ coordinates }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line no-new\r\n    new mapboxgl.Map({\r\n      container: MAPBOX_CONTAINER_ID,\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [coordinates.lon, coordinates.lat],\r\n      zoom: 10\r\n    });\r\n  }, [coordinates]);\r\n\r\n  return <Box boxShadow={3} className={classes.largeSize} id={MAPBOX_CONTAINER_ID} />;\r\n}\r\n\r\nCityMap.defaultProps = {\r\n  coordinates: {}\r\n};\r\n\r\nCityMap.propTypes = {\r\n  coordinates: PropTypes.shape({\r\n    lat: PropTypes.number.isRequired,\r\n    lon: PropTypes.number.isRequired\r\n  })\r\n};\r\n\r\nexport default CityMap;\r\n","import React from 'react';\r\n\r\nfunction CityNotFound() {\r\n  return <span>City not found!</span>;\r\n}\r\n\r\nexport default CityNotFound;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Typography, Tooltip } from '@material-ui/core';\r\n\r\nfunction CityTemperature({ temperature }) {\r\n  return (\r\n    <>\r\n      <Tooltip\r\n        aria-label=\"actual temperature in celsius degrees\"\r\n        arrow\r\n        placement=\"right\"\r\n        title=\"Actual temperature in Celsius degrees\"\r\n      >\r\n        <Typography variant=\"h3\" component=\"p\">\r\n          {temperature.actual}\r\n        </Typography>\r\n      </Tooltip>\r\n      <Tooltip\r\n        aria-label=\"min and max temperature in celsius degrees\"\r\n        arrow\r\n        placement=\"right\"\r\n        title=\"Min and max temperature in Celsius degrees\"\r\n      >\r\n        <Typography variant=\"h6\" component=\"p\">\r\n          {temperature.min} - {temperature.max}\r\n        </Typography>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nCityTemperature.propTypes = {\r\n  temperature: PropTypes.shape({\r\n    min: PropTypes.string.isRequired,\r\n    max: PropTypes.string.isRequired,\r\n    actual: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nCityTemperature.defaultProps = {\r\n  temperature: {}\r\n};\r\n\r\nexport default CityTemperature;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Box, Typography, Tooltip } from '@material-ui/core';\r\n\r\nfunction LocalDateTime({ localTime, localDate }) {\r\n  return (\r\n    <Box textAlign=\"right\">\r\n      <Tooltip title=\"Local Time\" aria-label=\"local time\" arrow placement=\"right\">\r\n        <Typography variant=\"h6\" component=\"p\">\r\n          {localTime}\r\n        </Typography>\r\n      </Tooltip>\r\n      <Tooltip title=\"Local Date\" aria-label=\"local date\" arrow placement=\"right\">\r\n        <Typography variant=\"h6\" component=\"p\" color=\"secondary\">\r\n          {localDate}\r\n        </Typography>\r\n      </Tooltip>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLocalDateTime.propTypes = {\r\n  localTime: PropTypes.string.isRequired,\r\n  localDate: PropTypes.string.isRequired\r\n};\r\n\r\nexport default LocalDateTime;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Grid, Typography, Box, Tooltip, Button } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nimport useSearchHistory from 'hooks/useSearchHistory';\r\nimport useCityQuery from './hooks/useCityQuery';\r\n\r\nimport CityImage from './components/CityImage';\r\nimport CityMap from './components/CityMap';\r\nimport CityNotFound from './components/CityNotFound';\r\nimport CityTemperature from './components/CityTemperature';\r\nimport LocalDateTime from './components/LocalDateTime';\r\n\r\nfunction City() {\r\n  const { name } = useParams();\r\n  const history = useHistory();\r\n\r\n  const {add: addCityToHistory} = useSearchHistory();\r\n\r\n  const { isLoading, data } = useCityQuery(name);\r\n\r\n  useEffect(() => {\r\n    name && addCityToHistory(name);\r\n  }, [addCityToHistory, name]);\r\n\r\n  if (isLoading) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  const { coord, humidity, location, pressure, temperature, weather, error, errorCode, localTime, localDate } = data;\r\n\r\n  if (error && errorCode === 404) {\r\n    return <CityNotFound />;\r\n  }\r\n\r\n  const handleBackToHome = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={6}>\r\n      <Grid item xs={6}>\r\n        <Button color=\"secondary\" onClick={handleBackToHome} startIcon={<ArrowBackIosIcon />} variant=\"contained\">\r\n          Back\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <LocalDateTime localTime={localTime} localDate={localDate} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Box textAlign=\"right\">\r\n          <img src={weather.imageUrl} alt={weather.description} title={weather.description} />\r\n          <Typography variant=\"h3\" component=\"h1\">{`${location.city}, ${location.country}`}</Typography>\r\n          <Tooltip title={weather.description} aria-label={weather.description} arrow placement=\"right\">\r\n            <Typography variant=\"h4\" component=\"h2\">{`It's ${weather.title}`}</Typography>\r\n          </Tooltip>\r\n          <CityTemperature temperature={temperature} />\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <CityImage coordinates={coord} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <CityMap coordinates={coord} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Box textAlign=\"right\">\r\n          <Typography variant=\"h6\" component=\"p\">{`Pressure: ${pressure}`}</Typography>\r\n          <Typography variant=\"h6\" component=\"p\">{`Humidity: ${humidity}`}</Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default City;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n// Styles\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styles from './SearchInput.styles';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction SearchInput({ name }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <InputBase\r\n      className={classes.input}\r\n      fullWidth\r\n      inputProps={{ 'aria-label': 'search by city name' }}\r\n      name={name}\r\n      placeholder=\"Search By City Name\"\r\n      type=\"search\"\r\n      endAdornment={\r\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nSearchInput.propTypes = {\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SearchInput;\r\n","export default {\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  input: {\r\n    padding: 10\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nimport { Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// Components\r\nimport SearchInput from './components/SearchInput';\r\n\r\n// Styles\r\nimport styles from './SearchForm.styles';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction SearchForm() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleOnSubmit = event => {\r\n    event.preventDefault();\r\n    const cityName = event.target['city-name'].value;\r\n\r\n    cityName && history.push(`/city/${cityName}`);\r\n  };\r\n\r\n  return (\r\n    <Paper component=\"form\" onSubmit={handleOnSubmit} elevation={1} className={classes.root}>\r\n      <SearchInput name=\"city-name\" />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","export default {\r\n  root: {\r\n    display: 'block',\r\n    margin: '20px auto',\r\n    padding: '2px 4px',\r\n    width: '400px'\r\n  }\r\n};\r\n","const styles = theme => ({\r\n  buttonsContainer: {\r\n    marginTop: theme.spacing(3),\r\n    textAlign: 'center'\r\n  },\r\n  historyButton: {\r\n    margin: theme.spacing(1),\r\n    width: theme.spacing(16),\r\n    height: theme.spacing(16)\r\n  },\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    marginLeft: '-52px',\r\n    marginTop: '10px'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from 'react';\r\n\r\nimport { Button, IconButton, makeStyles, Typography, Grid } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport useSearchHistory from 'hooks/useSearchHistory';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// Styles\r\nimport styles from './SearchHistory.styles';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction SearchHistory() {\r\n  const { items, remove } = useSearchHistory();\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleItemClick = cityName => {\r\n    cityName && history.push(`/city/${cityName}`);\r\n  };\r\n\r\n  const handleDeleteItem = cityName => {\r\n    remove(cityName);\r\n  };\r\n\r\n  const renderItems = () =>\r\n    items.map(item => (\r\n      <React.Fragment key={item}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          aria-label={`search for ${item}`}\r\n          title={`Search for ${item}`}\r\n          onClick={() => handleItemClick(item)}\r\n          className={classes.historyButton}\r\n        >\r\n          {item}\r\n        </Button>\r\n        <IconButton aria-label=\"delete\" className={classes.deleteButton} onClick={() => handleDeleteItem(item)}>\r\n          <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </React.Fragment>\r\n    ));\r\n\r\n  return items.length ? (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"h4\">\r\n          Search History\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.buttonsContainer}>\r\n        {renderItems()}\r\n      </Grid>\r\n    </Grid>\r\n  ) : null;\r\n}\r\n\r\nexport default SearchHistory;\r\n","import React from 'react';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// Components\r\nimport SearchForm from './components/SearchForm';\r\nimport SearchHistory from './components/SearchHistory';\r\n\r\nfunction Home() {\r\n  return (\r\n    <Grid container alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <SearchForm />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <SearchHistory />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      'Quicksand',\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(',')\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#FFF9F9'\r\n    },\r\n    secondary: {\r\n      main: '#758895'\r\n    },\r\n    background: {\r\n      default: '#1B2931',\r\n      paper: '#1B2931'\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\n\r\n// Routing\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n// Material\r\nimport { Container, CssBaseline } from '@material-ui/core';\r\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\r\n\r\n// Container Components\r\nimport City from './containers/City';\r\nimport Home from './containers/Home';\r\n\r\n// Utils\r\nimport theme from './theme';\r\n\r\n// Styles\r\nimport styles from './App.styles';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Container className={classes.container}>\r\n          <Router basename=\"/forecast\">\r\n            <Switch>\r\n              <Route path=\"/city/:name\">\r\n                <City />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default {\r\n  container: {\r\n    height: '100vh',\r\n    background: 'linear-gradient(47.75deg, #567485 -24.05%, #4D5B64 -24.05%, #424B51 -24.05%, #1B2931 62.27%), #1B2931'\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// Components\r\nimport App from './App';\r\n\r\n// Utils\r\nimport 'airbnb-browser-shims';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}